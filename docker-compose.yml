version: '3.7'
services:
  api:
    build: .
    image: tarpaulin-api
    restart: always
    ports:
      - 8000:8000
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: mysql
      MYSQL_PORT: ${MYSQL_PORT}
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_HOST: mongodb
      MONGO_PORT: ${MONGO_PORT}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      MAX_REQUESTS_PER_TIME_WINDOW: ${MAX_REQUESTS_PER_TIME_WINDOW}
      TIME_WINDOW_MILLISEC: ${TIME_WINDOW_MILLISEC}
      PAGINATION_PAGE_SIZE: ${PAGINATION_PAGE_SIZE}
      LIMIT_REQUEST_RATE: ${LIMIT_REQUEST_RATE}
    depends_on:
      - mysql
      - mongodb
      - redis

  mysql:
    image: mysql:5
    restart: always
    volumes:
      - mysql-data:/var/lib/mysql
      - ./db-init/mysql:/docker-entrypoint-initdb.d
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  mongodb:
    image: mongo:latest
    restart: always
    volumes:
      - mongo-data:/data/db
      - ./db-init/mongodb:/docker-entrypoint-initdb.d
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}

  redis:
    image: redis:latest
    restart: always

volumes:
  mysql-data:
    name: tarpaulin-mysql-data
  mongo-data:
